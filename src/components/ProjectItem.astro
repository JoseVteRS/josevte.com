---
import BadgeInfo from "./BadgeInfo.astro";
import LinkButton from "./LinkButton.astro";
import Github from "./icons/Github.astro";
import Link from "./icons/Link.astro";

interface Props {
    name: string;
    image?: string;
    isInProgress?: boolean;
    url?: string;
    repositoryUrl?: string;
    description: string;
    tecnologies: Array<string>;
}

const {
    name,
    description,
    tecnologies,
    image,
    repositoryUrl,
    url,
    isInProgress,
} = Astro.props;
---

<article
    class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0"
>
    <div class="w-full md:w-1/2">
        <div
            class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50"
        >
            {
                isInProgress && (
                    <div class="absolute z-10 left-2 top-2">
                        <BadgeInfo> Trabajo en progreso </BadgeInfo>
                    </div>
                )
            }

            <img
                alt={description}
                class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
                loading="lazy"
                src={image}
            />
        </div>
    </div>

    <div class="w-full md:w-1/2 md:max-w-lg">
        <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {name}
        </h3>
        <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row flex-wrap mb-2 gap-x-2">
                {
                    tecnologies.map((tecnology) => (
                        <li>
                            <span
                                class={`flex gap-x-2 rounded-full text-xs py-1 px-2 `}
                            >
                                {tecnology}
                            </span>
                        </li>
                    ))
                }
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
                {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
                {
                    repositoryUrl && (
                        <LinkButton href={repositoryUrl}>
                            <Github class="size-6" />
                            Code
                        </LinkButton>
                    )
                }
                {
                    url && (
                        <LinkButton href={url}>
                            <Link class="size-4" />
                            Preview
                        </LinkButton>
                    )
                }
            </footer>
        </div>
    </div>
</article>
